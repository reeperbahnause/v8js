name: Build and Test
on:
  push:
    branches: [ "build-windows" ]
  pull_request:
    branches: [ "build-windows" ]
permissions:
  contents: read

jobs:
  windows:
    runs-on: windows-2022
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
          version: ["8.3"]
          arch: [x64]
          ts: [ts]
    steps:
      - name: Configure Git
        run: git config --global core.autocrlf false
        
      - name: Checkout v8js
        uses: actions/checkout@v4
        with:
          submodules: true
          
      - name: Setup PHP ${{ matrix.version }}
        id: setup-php-sdk
        uses: php/setup-php-sdk@v0.8
        with:
          version: ${{matrix.version}}
          arch: ${{matrix.arch}}
          ts: ${{matrix.ts}}
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.arch}}
          toolset: ${{steps.setup-php-sdk.outputs.toolset}}

      - name: Build v8
        shell: cmd
        run: |
          echo ###### Configure Git ######
          git config --global core.autocrlf false
          git config --global core.filemode false
          git config --global color.ui true
          
          echo ###### Get V8 Depot Tools ######
          powershell -command "Invoke-WebRequest https://storage.googleapis.com/chrome-infra/depot_tools.zip -O depot_tools.zip"
          7z x depot_tools.zip -o*
          set PATH=%CD%\depot_tools;%PATH%
          set DEPOT_TOOLS_WIN_TOOLCHAIN=0
          call gclient

          mkdir v8
          cd v8

          echo ###### Fetch V8 ######
          REM call fetch --nohistory v8
          call fetch v8
          cd v8
          call git checkout 12.0.174

          echo ###### Build V8 ######
          REM call python .\tools\dev\v8gen.py x64.release -vv -- target_os="""win""" is_component_build=true use_custom_libcxx=false is_clang=true use_lld=false v8_enable_verify_heap=false v8_enable_i18n_support=true v8_use_external_startup_data=false symbol_level=0
          call python3 .\tools\dev\v8gen.py x64.release -vv -- is_component_build=true is_debug=false v8_use_snapshot=false enable_nacl=false

          REM call ninja -C out.gn\x64.release -t clean
          call ninja -C out.gn\x64.release v8
          dir out.gn /s

      - name: Build v8js
        run: |
          phpize
          ./configure --with-v8js --with-prefix=${{steps.setup-php-sdk.outputs.prefix}}
          #./buildconf
          #./configure --disable-all --enable-cli --with-v8js
          nmake
      - name: package
        run: |
          md binaries
          Get-ChildItem -Recurse -Filter "php_v8js.dll" | ForEach-Object {Copy-Item -Path $_.FullName -Destination "binaries"}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v8js-${{matrix.version}}-${{matrix.arch}}-${{matrix.ts}}
          path: binaries
      - name: test
        run: nmake test TESTS="--show-diff tests"
