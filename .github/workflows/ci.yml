name: Build and Test
on:
  push:
    branches: [ "build-windows" ]
  pull_request:
    branches: [ "build-windows" ]
permissions:
  contents: read

jobs:
  windows:
    runs-on: windows-2022
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
          version: ["8.3"]
          arch: [x64]
          ts: [ts]
    steps:
      - name: Configure Git
        run: git config --global core.autocrlf false
        
      - name: Checkout v8js
        uses: actions/checkout@v4
        with:
          submodules: true
          
      - name: Setup PHP ${{ matrix.version }}
        id: setup-php-sdk
        uses: php/setup-php-sdk@v0.8
        with:
          version: ${{matrix.version}}
          arch: ${{matrix.arch}}
          ts: ${{matrix.ts}}
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.arch}}
          toolset: ${{steps.setup-php-sdk.outputs.toolset}}

      - name: Checkout v8 depot_tools
        shell: cmd
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git chromium_depot_tools
          set PATH=%cd%;%PATH%
          set GYP_MSVS_VERSION=2015
          set DEPOT_TOOLS_WIN_TOOLCHAIN=0
          set GYP_CHROMIUM_NO_ACTION=0
          set xn={{matrix.arch}}
          cd chromium_depot_tools
          fetch.bat v8
          git.bat stash
          cd v8
          where python
          ..\git.bat checkout 7.0.276.11
          ..\gclient.bat sync
          ..\gn.bat gen v7.0\%xn%.release --args="is_component_build=true is_debug=false v8_use_snapshot=false enable_nacl=false target_cpu=%xn%" --ide=vs
          cd v7.0\%xn%.release
          msbuild all.sln /t:clean
          msbuild all.sln
          unittests

      - name: Build v8js
        run: |
          phpize
          ./configure --with-v8js --with-prefix=${{steps.setup-php-sdk.outputs.prefix}}
          #./buildconf
          #./configure --disable-all --enable-cli --with-v8js
          nmake
      - name: package
        run: |
          md binaries
          Get-ChildItem -Recurse -Filter "php_v8js.dll" | ForEach-Object {Copy-Item -Path $_.FullName -Destination "binaries"}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v8js-${{matrix.version}}-${{matrix.arch}}-${{matrix.ts}}
          path: binaries
      - name: test
        run: nmake test TESTS="--show-diff tests"
